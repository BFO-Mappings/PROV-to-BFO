PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX swrl: <http://www.w3.org/2003/11/swrl#> 

PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX bfo: <http://purl.obolibrary.org/obo/BFO_>
PREFIX ro: <http://purl.obolibrary.org/obo/RO_>
PREFIX cco: <http://www.ontologyrepository.com/CommonCoreOntologies/>

SELECT DISTINCT ?targetTerm ?label
# ?termType 
WHERE {
  # What kinds of things are we mapping?
  VALUES ?termType { owl:Class owl:ObjectProperty }

  # What target ontology are we mapping to?
  FILTER ( STRSTARTS(STR(?targetTerm), STR(prov:)) )
  
  # What source ontology are we mapping from?
  # FILTER( STRSTARTS(STR(?sourceTerm), STR(bfo:)) || STRSTARTS(STR(?sourceTerm), STR(ro:)) || STRSTARTS(STR(?sourceTerm), STR(cco:)) ) .
  
  # How are we mapping (which predicates) ?
  # Level 1: every target term must be subsumed by some axiom including term
  # Level 2: every target term must be subsumed by some source term
  # Level 3: every target term must be equivalent to some source term
  FILTER NOT EXISTS {
    # VALUES ?mappingPredicate { rdfs:subClassOf rdfs:subPropertyOf owl:equivalentClass owl:equivalentProperty owl:disjointUnionOf } .

    FILTER(STRSTARTS(STR(?sourceTerm), STR(bfo:)) || STRSTARTS(STR(?sourceTerm), STR(ro:)) || STRSTARTS(STR(?sourceTerm), STR(cco:))) .

    # Exclude terms that are transitively subsumed by some mapped term
    { ?targetTerm ?mappingPredicate ?sourceTerm . }
    UNION
    { ?targetTerm rdfs:subClassOf* ?targetSuper . ?targetSuper ?mappingPredicate ?sourceTerm . }
    UNION
    { ?targetTerm rdfs:subPropertyOf* ?targetSuper . ?targetSuper ?mappingPredicate ?sourceTerm . }
  }

  # Exclude property chain mappings
  FILTER NOT EXISTS {
    # TODO need to filter source term
    # TODO exclude implied inverses ...
    ?targetTerm owl:propertyChainAxiom ?propertyChainAxiom . 
    { ?propertyChainAxiom ?contains ?sourceTerm . }
    UNION
    { ?propertyChainAxiom ?contains ?mappedTerm . ?targetTerm owl:inverseOf ?mappedTerm . }
  }

  # Exclude SWRL rule mappings
  FILTER NOT EXISTS {
      # TODO: Require that either source term in head and target term in body, or vica versa
      { ?swrlMapping swrl:propertyPredicate ?targetTerm . }
      UNION
      { ?swrlMapping swrl:propertyPredicate ?mappedTerm . ?mappedTerm owl:inverseOf ?targetTerm . }
  }

  ?targetTerm a ?termType .
  ?targetTerm rdfs:label ?label .
  # OPTIONAL { ?targetTerm rdfs:subClassOf ?targetSuperClass } .
  # OPTIONAL { ?targetTerm rdfs:subPropertyOf ?targetSuperProperty } .
} ORDER BY ?termType ?targetTerm